body {
    font-family: 'Lato', sans-serif;
    min-height: 740px;
    background: black url('Qtdd2013_background.png') center top no-repeat;
    background-size: cover;
}

span.code, code {
    font-family: 'Source Code Pro', monospace;
    font-weight: 300;
}

h1 span.code {
    font-weight: 600;
}

ul { /* Make square the default */
  list-style-type: square;
}

ul.discdot {
  list-style-type: disc;
}

ul.nodot {
  list-style-type: none;
}

.box {
    background: #38670b;
    border-radius: 15px;
    color:white;
    font-weight: bold;
    font-size: 28px;
    text-align: center;
    margin-top: 5px;
}

.splitter {
    -webkit-column-count: 2;
    -webkit-column-gap: 5px;
}

.blue.box {
    background: #699dd3;
}

.green.box {
    background: #8bc953;
    color: black;
}

.orange.box {
    background: orange;
    color: black;
}


/*
    Now let's bring some text styles back ...
*/
b, strong { font-weight: bold }
i, em { font-style: italic }

/*  Font awesome icons could use spacing when used in lists and titles */
h1 [class^="icon-"],
li [class^="icon-"] {
    padding-right: 10px;
}

/* A black road looks more realistic */
h1 .icon-road {
    color: black;
    text-shadow: 1px 1px 20px white
}

/*
    ... and give links a nice look.
*/
a {
    color: inherit;
    text-decoration: none;
    padding: 0 0.1em;
    background: rgba(255,255,255,0.3);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.9);
    border-radius: 0.2em;

    transition: 0.5s;
}

a:hover,
a:focus {
    background: rgba(255,255,255,1);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.5);
}

/* fallback message for other browsers */

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}

/*
    Now let's style the presentation steps.

    We start with basics to make sure it displays correctly in everywhere ...
*/

.step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;
    box-sizing:         border-box;

    font-size: 48px;
    line-height: 1.5;
}

.step h2 {
    font-size: 1.2em;
}

#thanks h1 {
    font-size: 72px;
    font-weight: 900;
    text-align: center;
}

#thanks .footnote {
    position: absolute;
    bottom: -20px;
    font-size: 20px;
    color: #ccc;
}

#questions {
    color: white;
    text-shadow: 3px 3px 8px black;
}

#questions .footnote {
    position: absolute;
    bottom: -20px;
    font-size: 36px;
    color: black;
    text-shadow: 3px 3px 8px #ccc;
}

#titlePage h1 {
    font-size: 60px;
    font-weight: 900;
}

#titlePage h2 {
    font-size: 48px;
    font-weight: 300;
    text-align: right;
}

.slide {
    display: block;
    width: 100vw;
    height: 100vh;
}

.slide h1 {
    font-size: 1.6em;
    color: white;
    text-shadow: 2px 2px 5px black;
//    position: absolute;
    top: 2vh;
    left: 2vw;
    margin-top: 0; // Override UA stylesheet
}

.newspaper {
    -webkit-filter: drop-shadow(10px 10px 20px black) contrast(1.4) grayscale(0.9) sepia(0.6);
    -webkit-transform: rotate(-2deg);
    border-radius: 8px;
}

/*
.impress-enabled .step img {
    opacity: 0.2;
}

.impress-enabled .step.active img {
    opacity: 1;
}
*/

.cc-by:before {
    content: url("cc-by.png");
    opacity: 0.7;
}

.basicLink {
    background: none;
    padding: 0;
}

/* Embedded iframe demos theming */

.browser {
    border-radius: 10px;
    border: 5px solid #bbb;
    position: absolute;
    width: 990px;
}

.browser .toolbar {
    background-color: #bbb;
    height: 47px;
    position: relative;
    /* dirty hack to workaround potential rounding error artifact */
    width: 992px;
    left: -1px;
}

.browser .toolbar .buttons {
    float: left;
    left: 5px;
    position: absolute;
    top: 5px;
    width: 150px;
}

.browser .toolbar button.refresh {
    margin: 0 12px 0 12px;
}

.browser .toolbar button {
    border-radius: 4px;
    transition: all ease-in-out 0.2s;
    border: 1px solid #999;
    cursor: pointer;
    float: left;
    height: 32px;
    margin-right: 5px;
    padding: 0 9px 0 9px;
}

.browser .toolbar button:hover {
    background-color:#999
}

.browser .toolbar .address {
    left: 135px;
    position: absolute;
    right: 5px;
    top: 5px;
    background: #fff;
    border-radius: 2px;
    font-size: 22px;
    padding: 0 10px 0 10px;
}

.browser iframe {
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
    background-color: white;
    border: 0;
    margin: 0;
    width: 100%;
    height: 600px;
}

/*
.slide q {
    display: block;
    font-size: 50px;
    line-height: 72px;

    margin-top: 100px;
}

.slide q strong {
    white-space: nowrap;
}
*/

/*
    ... and we enhance the styles for impress.js.

    Basically we remove the margin and make inactive steps a little bit transparent.
*/
.impress-enabled .step {
    margin: 0;
    opacity: 0.2;

    -webkit-transition: opacity 1s;
    transition:         opacity 1s;
}

.impress-enabled .step.active { opacity: 1 }


/*
    And now we start to style each step separately.

    I agree that this may be not the most efficient, object-oriented and
    scalable way of styling, but most of steps have quite a custom look
    and typography tricks here and there, so they had to be styled separately.

    First is the title step with a big <h1> (no room for padding) and some
    3D positioning along Z axis.
*/

#title {
    padding: 0;
}

#title .try {
    font-size: 64px;
    position: absolute;
    top: -0.5em;
    left: 1.5em;

    -webkit-transform: translateZ(20px);
    transform:         translateZ(20px);
}

#title h1 {
    font-size: 190px;

    -webkit-transform: translateZ(50px);
    transform:         translateZ(50px);
}

#title .footnote {
    font-size: 32px;
}

/*
    Second step is nothing special, just a text with a link, so it doesn't need
    any special styling.

    Let's move to 'big thoughts' with centered text and custom font sizes.
*/
#big {
    width: 600px;
    text-align: center;
    font-size: 60px;
    line-height: 1;
}

#big b {
    display: block;
    font-size: 250px;
    line-height: 250px;
}

#big .thoughts {
    font-size: 90px;
    line-height: 150px;
}

/*
    'Tiny ideas' just need some tiny styling.
*/
#tiny {
    width: 500px;
    text-align: center;
}

/*
    This step has some animated text ...
*/
#ing { width: 500px }

/*
    ... so we define display to `inline-block` to enable transforms and
    transition duration to 0.5s ...
*/
#ing b {
    display: inline-block;
    -webkit-transition: 0.5s;
    transition:         0.5s;
}

/*
    ... and we want 'positioning` word to move up a bit when the step gets
    `present` class ...
*/
#ing.present .positioning {
    -webkit-transform: translateY(-10px);
    transform:         translateY(-10px);
}

/*
    ... 'rotating' to rotate a quarter of a second later ...
*/
#ing.present .rotating {
    -webkit-transform: rotate(-10deg);
    transform:         rotate(-10deg);

    -webkit-transition-delay: 0.25s;
    transition-delay:         0.25s;
}

/*
    ... and 'scaling' to scale down after another quarter of a second.
*/
#ing.present .scaling {
    -webkit-transform: scale(0.7);
    transform:         scale(0.7);

    -webkit-transition-delay: 0.5s;
    transition-delay:         0.5s;
}

/*
    The 'imagination' step is again some boring font-sizing.
*/

#imagination {
    width: 600px;
}

#imagination .imagination {
    font-size: 78px;
}

/*
    There is nothing really special about 'use the source, Luke' step, too,
    except maybe of the Yoda background.

    As you can see below I've 'hard-coded' it in data URL.
    That's not the best way to serve images, but because that's just this one
    I decided it will be OK to have it this way.

    Just make sure you don't blindly copy this approach.
*/

/*
    Below we position each word separately along Z axis and we want it to transition
    to default position in 0.5s when the step gets `present` class.

    Quite a simple idea, but lot's of styles and prefixes.
*/


/*
    The last step is an overview.
    There is no content in it, so we make sure it's not visible because we want
    to be able to click on other steps.

*/
#overview { display: none }

/*
    We also make other steps visible and give them a pointer cursor using the
    `impress-on-` class.
*/
.impress-on-overview .step {
    opacity: 1;
    cursor: pointer;
}

/* Show Table of contents again when getting back to it */
.impress-on-toc2 #toc,
.impress-on-toc3 #toc,
/* Highlight current part */
.impress-on-toc .part-1,
.impress-on-toc2 .part-2,
.impress-on-toc3 .part-3,
/* Similarly, we get back to the "Splitting processes" slide */
.impress-on-splitting2 #splitting {
    opacity: 1;
}


[class^="part-"] {
opacity: 0.4
}



/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }

/*
    There is one funny thing I just realized.

    Thanks to this workaround above everything except #impress element is invisible
    for click events. That means that the hint element is also not clickable.
    So basically all of this transforms and delayed transitions trickery was probably
    not needed at all...

    But it was fun to learn about it, wasn't it?
*/
